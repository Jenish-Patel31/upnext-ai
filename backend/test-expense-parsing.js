// test-expense-parsing.js - Test the advanced expense parsing service
import { parseExpenseWithAI } from './services/expenseParsingService.js';
import dotenv from 'dotenv';

dotenv.config();

const testCases = [
  {
    text: "I spent 500 rupees on lunch today",
    language: "en",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  },
  {
    text: "рдореИрдВрдиреЗ рджреЛрдкрд╣рд░ рдХреЗ рдЦрд╛рдиреЗ рдкрд░ 500 рд░реБрдкрдпреЗ рдЦрд░реНрдЪ рдХрд┐рдП",
    language: "hi",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  },
  {
    text: "рдореА рджреБрдкрд╛рд░рдЪреНрдпрд╛ рдЬреЗрд╡рдгрд╛рд╡рд░ 500 рд░реБрдкрдпреЗ рдЦрд░реНрдЪ рдХреЗрд▓реЗ",
    language: "mr",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  },
  {
    text: "рк╣рлБркВ ркмрккрлЛрк░ркирк╛ ркнрлЛркЬрки рккрк░ 500 рк░рлВрккрк┐ркпрк╛ ркЦрк░рлНркЪ ркХрк░рлНркпрк╛",
    language: "gu",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  },
  {
    text: "роиро╛ройрпН роородро┐роп роЙрогро╡рпБроХрпНроХрпБ 500 ро░рпВрокро╛ропрпН роЪрпЖро▓ро╡ро┤ро┐родрпНродрпЗройрпН",
    language: "ta",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  },
  {
    text: "р░ир▒Зр░ир▒Б р░ор░зр▒Нр░пр░╛р░╣р▒Нр░и р░нр▒Лр░Ьр░ир░╛р░ир░┐р░Хр░┐ 500 р░░р▒Вр░кр░╛р░пр░▓р▒Б р░Цр░░р▒Нр░Ър▒Б р░Ър▒Зр░╢р░╛р░ир▒Б",
    language: "te",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  },
  {
    text: "ржЖржорж┐ ржжрзБржкрзБрж░рзЗрж░ ржЦрж╛ржмрж╛рж░рзЗрж░ ржЬржирзНржп рзлрзжрзж ржЯрж╛ржХрж╛ ржЦрж░ржЪ ржХрж░рзЗржЫрж┐",
    language: "bn",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  },
  {
    text: "риорйИриВ рижрйБрикри╣ри┐ри░ рижрйЗ риЦри╛ригрйЗ ри▓риИ 500 ри░рйБрикриП риЦри░риЪ риХрйАридрйЗ",
    language: "pa",
    categories: ["Food", "Transport", "Shopping", "Entertainment", "Health", "Education", "Bills", "Groceries"],
    expected: { amount: 500, category: "Food" }
  }
];

async function testExpenseParsing() {
  console.log('ЁЯза Testing Advanced Expense Parsing Service...\n');
  
  let passedTests = 0;
  let totalTests = testCases.length;

  for (let i = 0; i < testCases.length; i++) {
    const testCase = testCases[i];
    console.log(`ЁЯУЭ Test ${i + 1}: ${testCase.language.toUpperCase()} - "${testCase.text}"`);
    
    try {
      const result = await parseExpenseWithAI(testCase.text, testCase.categories, testCase.language);
      
      // Check if amount matches
      const amountMatch = result.amount === testCase.expected.amount;
      const categoryMatch = result.category === testCase.expected.category;
      
      if (amountMatch && categoryMatch) {
        console.log(`тЬЕ PASSED - Amount: ${result.amount}, Category: ${result.category}, Confidence: ${(result.confidence * 100).toFixed(1)}%`);
        passedTests++;
      } else {
        console.log(`тЭМ FAILED - Expected: Amount ${testCase.expected.amount}, Category ${testCase.expected.category}`);
        console.log(`   Got: Amount ${result.amount}, Category ${result.category}`);
      }
      
      console.log(`   Language: ${result.language}, Accuracy: ${(result.accuracy * 100).toFixed(1)}%\n`);
      
    } catch (error) {
      console.log(`тЭМ ERROR: ${error.message}\n`);
    }
  }
  
  console.log(`ЁЯОп Test Results: ${passedTests}/${totalTests} tests passed`);
  console.log(`ЁЯУК Success Rate: ${((passedTests / totalTests) * 100).toFixed(1)}%`);
  
  if (passedTests === totalTests) {
    console.log('ЁЯОЙ All tests passed! The AI parsing service is working perfectly!');
  } else {
    console.log('тЪая╕П Some tests failed. Check the implementation.');
  }
}

// Run the tests
testExpenseParsing().catch(console.error);
